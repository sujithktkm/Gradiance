
import java.awt.Frame;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.sql.Array;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import static java.sql.Types.ARRAY;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.AbstractMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.util.*;
import oracle.jdbc.OracleCallableStatement;
import oracle.jdbc.OracleTypes;
import oracle.sql.ARRAY;
import oracle.sql.ArrayDescriptor;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Rishi
 */
public class Professor_AddHomeWork extends javax.swing.JFrame {

    /**
     * Creates new form Professor_AddHomeWork
     */
    Gradiance gradianceInstance;
    String CourseToken;
    int[] arrayCourses;
    JCheckBox cb[]; 
    JLabel jb[];
    public Professor_AddHomeWork(Frame parent,boolean modal) {
        gradianceInstance = (Gradiance)parent;
        CourseToken = gradianceInstance.globalProfessor_Home.CurrentCourseToken;
        initComponents();
    }
    
    private int getCourseTopicId(String courseTopicName)
    {
        try
        {
            String sql = "select COURSETOPICID from COURSETOPICS where COURSETOPICNAME = ?";
            PreparedStatement stmnt = Gradiance.conn.prepareStatement(sql);
            stmnt.setString(1, courseTopicName);
            ResultSet rs = stmnt.executeQuery();
            rs.getInt(1);
        }
        catch(Exception ex)
        {
            
        }
        finally
        {
            return 0;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startDateLabel = new javax.swing.JLabel();
        numberAttemptsLabel = new javax.swing.JLabel();
        endDateLabel = new javax.swing.JLabel();
        topicsLabel = new javax.swing.JLabel();
        correctAnswerPointsLabel = new javax.swing.JLabel();
        difficultyLevelLabel = new javax.swing.JLabel();
        numQuestionsLabel = new javax.swing.JLabel();
        incorrectAnswerPointsLabel = new javax.swing.JLabel();
        scoreSelectionCriteriaLabel = new javax.swing.JLabel();
        startDateText = new javax.swing.JTextField();
        endDateText = new javax.swing.JTextField();
        numberofAttemptsText = new javax.swing.JTextField();
        numberQuestionsText = new javax.swing.JTextField();
        correctAnswerPointsText = new javax.swing.JTextField();
        incorrectAnswerPointsText = new javax.swing.JTextField();
        difficultylevelText = new javax.swing.JTextField();
        OKButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();
        btn_selectTopics = new javax.swing.JButton();
        scoreSelectionCmbBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        startDateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        startDateLabel.setText("StartDate");

        numberAttemptsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numberAttemptsLabel.setText("NumberAttempts");

        endDateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        endDateLabel.setText("EndDate");

        topicsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        topicsLabel.setText("Topics");

        correctAnswerPointsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        correctAnswerPointsLabel.setText("+Ve Answer Points");

        difficultyLevelLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        difficultyLevelLabel.setText("Difficulty Level");

        numQuestionsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numQuestionsLabel.setText("No. of Questions");

        incorrectAnswerPointsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        incorrectAnswerPointsLabel.setText("-Ve Answer Points");

        scoreSelectionCriteriaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scoreSelectionCriteriaLabel.setText("Score Selection Criteria");
        scoreSelectionCriteriaLabel.setToolTipText("Score Selection Criteria");

        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        btn_selectTopics.setText("Select Topics");
        btn_selectTopics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_selectTopicsActionPerformed(evt);
            }
        });

        scoreSelectionCmbBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Max", "Latest", "Average" }));
        scoreSelectionCmbBox.setToolTipText("ScoreSelectionCriteria");
        scoreSelectionCmbBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scoreSelectionCmbBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(190, 190, 190)
                            .addComponent(endDateText, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(scoreSelectionCriteriaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(difficultyLevelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(48, 48, 48)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(scoreSelectionCmbBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(difficultylevelText, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                .addComponent(incorrectAnswerPointsText, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(correctAnswerPointsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numQuestionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(incorrectAnswerPointsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numberAttemptsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(topicsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numberQuestionsText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(correctAnswerPointsText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_selectTopics, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(numberofAttemptsText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(startDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(startDateText, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(endDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(288, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(OKButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BackButton)
                .addGap(183, 183, 183))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(endDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endDateLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btn_selectTopics)
                        .addGap(4, 4, 4)
                        .addComponent(numberQuestionsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numberAttemptsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numberofAttemptsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(topicsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numQuestionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(correctAnswerPointsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(correctAnswerPointsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(incorrectAnswerPointsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(incorrectAnswerPointsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scoreSelectionCriteriaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scoreSelectionCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(difficultyLevelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(difficultylevelText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackButton)
                    .addComponent(OKButton))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        DateFormat formatter ; 
        String userName = gradianceInstance.UserName;
        ARRAY arrayCoursetopics = null;
        java.util.Date BeginDate =null ,EndDate= null;
        java.sql.Date BeginSql = null;
        java.sql.Date EndSql = null;
        formatter = new SimpleDateFormat("yyyy-MM-dd");
        int CorrectAnswerPoints = Integer.parseInt(correctAnswerPointsText.getText());
        int InCorrectAnswerPoints = Integer.parseInt(incorrectAnswerPointsText.getText());
        int NumberofQuestions = 0;
        try
        {
        BeginDate = formatter.parse(startDateText.getText());
        }
        catch(Exception ex)
        {
            
        }
        
        try
        {
            
        EndDate = formatter.parse(endDateText.getText());
        BeginSql = new java.sql.Date(BeginDate.getTime());
        EndSql = new java.sql.Date(EndDate.getTime());
        ArrayDescriptor arrayDescCourseTopics = ArrayDescriptor.createDescriptor("COURSETOPIC_LIST", Gradiance.conn);
        arrayCoursetopics = new ARRAY(arrayDescCourseTopics,Gradiance.conn,arrayCourses);
        }
        catch(Exception Ex)
        {
            Ex.printStackTrace();
        }
        
        int NumberofAttempts = Integer.parseInt(numberofAttemptsText.getText());
        int difficultyLevel = Integer.parseInt(difficultylevelText.getText());
       // String CourseTopicName = topicsCmbBox.getSelectedItem().toString();
        try
        {  
            String sql ="{call EXERCISECREATION(?,?,?,?,?,?,?,?,?,?,?)}";
            Connection conn =Gradiance.conn ;
            CallableStatement callableStatement = conn.prepareCall(sql);
            callableStatement.setArray(1, arrayCoursetopics);
            callableStatement.setDate(2, BeginSql);
            callableStatement.setDate(3,EndSql);
            callableStatement.setInt(4,NumberofAttempts);
            callableStatement.setInt(5,difficultyLevel);
            callableStatement.setString(6,scoreSelectionCmbBox.getSelectedItem().toString());
            callableStatement.setInt(7,NumberofQuestions);
            callableStatement.setInt(8,CorrectAnswerPoints);
            callableStatement.setString(9,CourseToken);
            callableStatement.setInt(10,InCorrectAnswerPoints);
            callableStatement.registerOutParameter(11,java.sql.Types.INTEGER);
            callableStatement.execute();
            
            int exerciseId = callableStatement.getInt(11);
            
            
            String sql1 ="{call ATTEMPT_ZERO(?,?)}";
            callableStatement = conn.prepareCall(sql1);
            callableStatement.setInt(1, exerciseId);
            callableStatement.setString(2, CourseToken);
            callableStatement.execute();
            
            if(exerciseId > 1)
            {
                JOptionPane.showMessageDialog(this, "Exercise created Successfully!");
            
            }
        }
        catch(SQLException sql)
        {
            sql.printStackTrace();
        }
        catch (Exception ex)
        {
            ex.printStackTrace();
        }
        this.setVisible(false);
        gradianceInstance.globalProfessor_CourseHomePage.setVisible(true);
        
    }//GEN-LAST:event_OKButtonActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        this.setVisible(false);
        gradianceInstance.globalProfessor_CourseHomePage.setVisible(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    
    private void quitBtnActionPerformed(ActionEvent evt, JFrame  Frame) {
        Frame.setVisible(false);
        Frame.dispose();
        this.setVisible(true);
    }
    
    private void selectBtnActionPerformed(ActionEvent evt,JFrame jf) {
        try
        {
        int i = 0,len=0,counter=0;
        while(i < cb.length)
        {
            if(cb[i].isSelected())
                counter++;
            i++;
        }
        arrayCourses = new int[counter];
        i=0;
        while(i < cb.length)
        {
            if(cb[i].isSelected())
                arrayCourses[len++] = Integer.parseInt(jb[i].getText());
            i++;
        }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        jf.setVisible(false);
        jf.dispose();
        this.setVisible(true);
    }
    
    private void btn_selectTopicsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_selectTopicsActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
           final JFrame jf = new JFrame();
           JPanel p=new JPanel(new GridBagLayout());
           GridBagConstraints gb = new GridBagConstraints();
           
           JButton selectBtn=new JButton("Select Topics");
            selectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectBtnActionPerformed(evt,jf);
            }

            });
            
            
           JButton quitBtn=new JButton("Quit With out Saving");
            quitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitBtnActionPerformed(evt, jf);
            }

            });
           
           
           
           int j= 0;
           
            
          
            try
            {
            
             String sql ="{call FETCH_COURSETOPICLIST(?,?)}";
            Connection conn = Gradiance.conn;
            CallableStatement callableStatement = conn.prepareCall(sql);
            callableStatement.setString(1,CourseToken);
            callableStatement.registerOutParameter(2,OracleTypes.CURSOR);
            callableStatement.execute();
            ResultSet result = ((OracleCallableStatement)callableStatement).getCursor(2);
            
            int rowcount = 0;
            while (result.next()) 
            {
                    rowcount++;
            }
            callableStatement.execute();
            result = ((OracleCallableStatement)callableStatement).getCursor(2);
            cb = new JCheckBox[rowcount];
            jb = new JLabel[rowcount];
            while(result.next()){
                cb[j]=new JCheckBox(result.getString(3));
                cb[j].setVisible(true);
                jb[j]= new JLabel(result.getString(2));
                jb[j].setVisible(false);
                j++;
            }
            }
           catch (SQLException ex) {
            Logger.getLogger(Gradiance.class.getName()).log(Level.SEVERE, null, ex);
        }
            
           
           
           jf.add(p);
           
           for(int i=0;i<j;i++) {
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = i; 
            p.add(cb[i],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 1;
            gb.gridy = i; 
            p.add(jb[i],gb);
           }
          
           gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = ++j;
            p.add(selectBtn,gb);
           
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 1;
            gb.gridy = j; 
            p.add(quitBtn,gb);
           jf.setVisible(true);
           jf.setSize(600,600);

        
    }//GEN-LAST:event_btn_selectTopicsActionPerformed

    private void scoreSelectionCmbBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scoreSelectionCmbBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_scoreSelectionCmbBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Professor_AddHomeWork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Professor_AddHomeWork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Professor_AddHomeWork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Professor_AddHomeWork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Professor_AddHomeWork().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton OKButton;
    private javax.swing.JButton btn_selectTopics;
    private javax.swing.JLabel correctAnswerPointsLabel;
    private javax.swing.JTextField correctAnswerPointsText;
    private javax.swing.JLabel difficultyLevelLabel;
    private javax.swing.JTextField difficultylevelText;
    private javax.swing.JLabel endDateLabel;
    private javax.swing.JTextField endDateText;
    private javax.swing.JLabel incorrectAnswerPointsLabel;
    private javax.swing.JTextField incorrectAnswerPointsText;
    private javax.swing.JLabel numQuestionsLabel;
    private javax.swing.JLabel numberAttemptsLabel;
    private javax.swing.JTextField numberQuestionsText;
    private javax.swing.JTextField numberofAttemptsText;
    private javax.swing.JComboBox scoreSelectionCmbBox;
    private javax.swing.JLabel scoreSelectionCriteriaLabel;
    private javax.swing.JLabel startDateLabel;
    private javax.swing.JTextField startDateText;
    private javax.swing.JLabel topicsLabel;
    // End of variables declaration//GEN-END:variables
}
