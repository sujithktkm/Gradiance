import java.awt.Color;
import java.awt.Font;
import java.awt.Frame;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import oracle.jdbc.OracleCallableStatement;
import oracle.jdbc.OracleTypes;
import oracle.sql.ARRAY;
import oracle.sql.ArrayDescriptor;

public class Course_HomePage extends javax.swing.JFrame {

    /**
     * Creates new form CourseHomePage
     */
   Gradiance globalParent;
   int count;
   
    
    public Course_HomePage(Frame parent, boolean modal) {
        globalParent = (Gradiance)parent;
        initComponents();
      
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Gradiance");

        jButton10.setText("View Scores");

        jButton11.setText("Attempt Homework");

        jButton12.setText("View Past Submissions");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
            jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton13.setText("View Notifications");

        jButton14.setText("Back");

        jButton2.setText("Course Material");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
         jButton10.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
         jButton11.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(442, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton10)
                .addGap(18, 18, 18)
                .addComponent(jButton11)
                .addGap(18, 18, 18)
                .addComponent(jButton12)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton13)
                .addGap(18, 18, 18)
                .addComponent(jButton14)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) { 
     this.setVisible(false);
     globalParent.globalHomePage.globalyour_classes.setVisible(true);
    } 
    
    
     private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) { 
            
     
            this.setVisible(false);
            final JFrame jf_hw = new JFrame();
            JPanel p=new JPanel(new GridBagLayout());
            GridBagConstraints gb = new GridBagConstraints();
          // public int coursetoken_id =Integer.parseInt(globalParent.globalHomePage.globalyour_classes.course_tokenid);
          
           
            final JButton Open_Course[] = new JButton[1000];
            JLabel jb1[] = new JLabel[1000];
           /*  JLabel jb2[] = new JLabel[1000];
            JLabel jb3[] = new JLabel[1000];*/
            JButton backBtn = new JButton("Go Back");
           backBtn.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtn_CourseHomePageActionPerformed(evt,jf_hw);
            }
            });
                   
             int j =0;
 
        
            
            try
            {

            String sql ="{call RetrieveCourseContent(?,?)}";
            Connection conn = Gradiance.conn;
            CallableStatement callableStatement = conn.prepareCall(sql);
            callableStatement.setString(1,globalParent.globalHomePage.globalyour_classes.course_tokenid);
            callableStatement.registerOutParameter(2,OracleTypes.CURSOR);
            callableStatement.execute();
           final  ResultSet result = ((OracleCallableStatement)callableStatement).getCursor(2);
          

            while(result.next()){
               jb1[j]=new JLabel(result.getString(2)+"    ");
              
    
               
                Open_Course[j] = new JButton(new opencoursecontent(globalParent.globalHomePage.globalyour_classes.course_tokenid,result.getString(2)));
                Open_Course[j].setText("Open ");
               
                j++ ;
                
                            }
            }
           catch (SQLException ex) {
            Logger.getLogger(Gradiance.class.getName()).log(Level.SEVERE, null, ex);
        }
            
                  
           
           
            
            jf_hw.add(p);

           for(int i=0;i<j;i++) {
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 1+i;
            p.add(jb1[i],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 2;
            gb.gridy = 1+i;
            p.add(Open_Course[i],gb);
            
           
                  
           }

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 2;
            gb.gridy = j+3;
            p.add(backBtn,gb);
           jf_hw.setVisible(true);
           jf_hw.setSize(600,600);
     } 
     
     
     
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) { 
           this.setVisible(false);
           final JFrame jf = new JFrame();
           JPanel p=new JPanel(new GridBagLayout());
           GridBagConstraints gb = new GridBagConstraints();
           JButton Back =new JButton("Back");
           JButton clear_Messages =new JButton("Clear Messages");
           Back.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtn_CourseHomePageActionPerformed(evt,jf);
            }
            });
          
           int j= 0;

           final JLabel jb1[] = new JLabel[1000];
            
           try
            {

            String sql ="{call RetrieveNotifications(?,?,?)}";
            Connection conn = Gradiance.conn;
            CallableStatement callableStatement = conn.prepareCall(sql);
            callableStatement.setString(1,globalParent.UserName);
            callableStatement.setString(2,globalParent.globalHomePage.globalyour_classes.course_tokenid.toString());
            callableStatement.registerOutParameter(3,OracleTypes.CURSOR);
            callableStatement.execute();
            ResultSet result = ((OracleCallableStatement)callableStatement).getCursor(3);
            

            while(result.next()){
                
                
                
                jb1[j]=new JLabel(result.getString(1)+"    ");
                jb1[j].setVisible(true);
                j++;
             }
            count =j;
            }
           catch (SQLException ex) {
            Logger.getLogger(Gradiance.class.getName()).log(Level.SEVERE, null, ex);
        }
            
             JLabel Notifications = new JLabel("Notifications    ");
                     
             Font font = new Font("Courier", Font.BOLD,12);
            Notifications.setFont(font);
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 0;
            //Notifications.
            p.add(Notifications,gb);

             
           jf.add(p);

           for(int i=0;i<j;i++) {
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 1+i;
            p.add(jb1[i],gb);
      
        
           
           }

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 2;
            gb.gridy = j+3;
            p.add(Back,gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 3;
            gb.gridy = j+3;
            p.add(clear_Messages,gb);
           jf.setVisible(true);
           jf.setSize(600,600);
           
           try{
          String sql ="{call UpdateNotifications(?,?)}";
            Connection conn = Gradiance.conn;
            CallableStatement callableStatement = conn.prepareCall(sql);
            callableStatement.setString(1,globalParent.UserName);
            callableStatement.setString(2,globalParent.globalHomePage.globalyour_classes.course_tokenid.toString());
            callableStatement.execute();
           }
           catch(SQLException ex) {
            Logger.getLogger(Gradiance.class.getName()).log(Level.SEVERE, null, ex);
           }
           
           clear_Messages.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clear_MessagesActionPerformed(evt,jf,jb1,count);
            }
            });
    }  
     private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) { 
            this.setVisible(false);
            final JFrame jf_hw = new JFrame();
            JPanel p=new JPanel(new GridBagLayout());
            GridBagConstraints gb = new GridBagConstraints();
          
          
           
           final JButton Open_HW[] = new JButton[1000];
            JLabel jb1[] = new JLabel[1000];
           JLabel jb2[] = new JLabel[1000];
           JLabel jb3[] = new JLabel[1000];
           JButton backBtn = new JButton("Go Back");
           backBtn.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtn_CourseHomePageActionPerformed(evt,jf_hw);
            }
            });
                   
             int j =0;
 
        
            
            try
            {

            String sql ="{call hw_attempts(?,?,?)}";
            Connection conn = Gradiance.conn;
            CallableStatement callableStatement = conn.prepareCall(sql);
            callableStatement.setString(2,globalParent.UserName);
            callableStatement.setString(1,globalParent.globalHomePage.globalyour_classes.course_tokenid);
            callableStatement.registerOutParameter(3,OracleTypes.CURSOR);
            callableStatement.execute();
           final  ResultSet result = ((OracleCallableStatement)callableStatement).getCursor(3);
          

            while(result.next()){
                jb1[j]=new JLabel(result.getString(1)+"    ");
              
                jb2[j]=new JLabel(result.getString(2)+"    ");
                
                jb3[j]=new JLabel((Integer.parseInt(result.getString(3))-1)+"    ");
                
               
                Open_HW[j] = new JButton(new SomeAction(Integer.parseInt(result.getString(1)),Integer.parseInt(result.getString(2)),(Integer.parseInt(result.getString(3))-1),globalParent.UserName,globalParent.globalHomePage.globalyour_classes.course_tokenid));
                Open_HW[j].setText("Open Homework"+result.getString(1));
               
                j++ ;
                
                            }
            }
           catch (SQLException ex) {
            Logger.getLogger(Gradiance.class.getName()).log(Level.SEVERE, null, ex);
        }
            
             JLabel AttemptID = new JLabel("HomeworkId    ");
            JLabel NumberOfAttempts = new JLabel("MaximumAttempts    ");
            JLabel MaximumAttempts = new JLabel("AttemptsMade    ");
           
            
             gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 0;
            p.add(AttemptID,gb);

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 1;
            gb.gridy = 0;
            p.add(NumberOfAttempts,gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 2;
            gb.gridy = 0;
            p.add(MaximumAttempts,gb);
            
           
           
            
            jf_hw.add(p);

           for(int i=0;i<j;i++) {
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 1+i;
            p.add(jb1[i],gb);

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 1;
            gb.gridy = 1+i;
            p.add(jb2[i],gb);
            
             gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 2;
            gb.gridy = 1+i;
            p.add(jb3[i],gb);
           
             gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 3;
            gb.gridy = 1+i;
            p.add(Open_HW[i],gb);
           
           
           
           }

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 2;
            gb.gridy = j+3;
            p.add(backBtn,gb);
           jf_hw.setVisible(true);
           jf_hw.setSize(600,600);
           
           
           
           
            }
        
     
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {                                          
           JFrame jf = new JFrame();
           JPanel p=new JPanel(new GridBagLayout());
           
           GridBagConstraints gb = new GridBagConstraints();
           
           
           JButton Back =new JButton("Back");
           JLabel ExId[] = new JLabel[1000];
           JLabel attemptID[] = new JLabel[1000];
           JLabel marks[] = new JLabel[1000];
           JLabel subTime[] = new JLabel[1000];
           JButton viewSub[] = new JButton[1000];
           
           
            try
            {

            String sql ="{CALL FetchPastSubmissions(?,?,?)}";
            Connection conn = Gradiance.conn;
            CallableStatement callableStatement = conn.prepareCall(sql);
            callableStatement.setString(1,globalParent.UserName);
            callableStatement.setString(2,globalParent.globalHomePage.globalyour_classes.course_tokenid);
            callableStatement.registerOutParameter(3,OracleTypes.CURSOR);
            callableStatement.execute();
            ResultSet result = ((OracleCallableStatement)callableStatement).getCursor(3);
            
            int j =0;
            
            
            
            while(result.next())
            {
                ExId[j] = new JLabel(result.getString(1));
                attemptID[j] = new JLabel(result.getString(5));
                marks[j] = new JLabel(result.getString(3));
                subTime[j] = new JLabel(result.getString(4));
                viewSub[j] = new JButton(new SomeAction1(Integer.parseInt(result.getString(1)),Integer.parseInt(result.getString(5)),globalParent.UserName));
                viewSub[j].setText("View Submission");
                j++;
            }
            
            ExId[j] = new JLabel("Exercise ID    ");
            attemptID[j] = new JLabel("Attempt ID    ");
            marks[j] = new JLabel("Marks    ");
            subTime[j] = new JLabel("Submission Time    ");
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 0;
            p.add(ExId[j],gb);

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 1;
            gb.gridy = 0;
            p.add(attemptID[j],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 2;
            gb.gridy = 0;
            p.add(marks[j],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 3;
            gb.gridy = 0;
            p.add(subTime[j],gb);
           

            int i =0;
            for (i = 0; i < j; i++) 
            {
           
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 2+ i;
            p.add(ExId[i],gb);

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 1;
            gb.gridy = 2+i;
            p.add(attemptID[i],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 2;
            gb.gridy = 2+i;
            p.add(marks[i],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 3;
            gb.gridy = 2+i;
            p.add(subTime[i],gb);
            
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 4;
            gb.gridy = 2+i;
            p.add(viewSub[i],gb);
           
            }
            
            jf.add(p);
            
           
            jf.pack();
            jf.setVisible(true);
            
            }
            catch(Exception ex)
            {
                
            }

        
    }            
    
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) { 
           this.setVisible(false);
           final JFrame jf = new JFrame();
           JPanel p=new JPanel(new GridBagLayout());
           GridBagConstraints gb = new GridBagConstraints();
           
           JButton Back =new JButton("Back");
           Back.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt,jf);
            }
            });
           
         int j= 0;

           JLabel jb1[] = new JLabel[1000];
           JLabel jb2[] = new JLabel[1000];
           JLabel jb3[] = new JLabel[1000];
           JLabel jb4[] = new JLabel[1000];
            try
            {

            String sql ="{call HW_LIST(?,?,?)}";
            Connection conn = Gradiance.conn;
            CallableStatement callableStatement = conn.prepareCall(sql);
            callableStatement.setString(1,globalParent.UserName);
            callableStatement.setString(2,globalParent.globalHomePage.globalyour_classes.course_tokenid.toString());
            callableStatement.registerOutParameter(3,OracleTypes.CURSOR);
            callableStatement.execute();
            ResultSet result = ((OracleCallableStatement)callableStatement).getCursor(3);
            

            while(result.next()){
                int attempt_temp = Integer.parseInt(result.getString(2));
                
                if(attempt_temp !=0)
                {
                jb1[j]=new JLabel(result.getString(1)+"    ");
                jb1[j].setVisible(true);
                jb2[j]=new JLabel(result.getString(2)+"    ");
                jb3[j]=new JLabel(result.getString(3)+"    ");
                jb4[j] =new JLabel(result.getString(4)+"    ");
                j++;
            }
            }
            }
           catch (SQLException ex) {
            Logger.getLogger(Gradiance.class.getName()).log(Level.SEVERE, null, ex);
        }
            
             JLabel exerciseID = new JLabel("ExerciseID    ");
            JLabel attemptId = new JLabel("AttemptID    ");
            JLabel marksObtained = new JLabel("Marks Obtained    ");
            JLabel sTime = new JLabel("Submission Time    ");
            
             gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 0;
            p.add(exerciseID,gb);

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 1;
            gb.gridy = 0;
            p.add(attemptId,gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 2;
            gb.gridy = 0;
            p.add(marksObtained,gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 3;
            gb.gridy = 0;
            p.add(sTime,gb);
           

           jf.add(p);

           for(int i=0;i<j;i++) {
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 1+i;
            p.add(jb1[i],gb);

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 1;
            gb.gridy = 1+i;
            p.add(jb2[i],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 2;
            gb.gridy = 1+i;
            p.add(jb3[i],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 3;
            gb.gridy = 1+i;
            p.add(jb4[i],gb);
           
           
           }

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 2;
            gb.gridy = j+3;
            p.add(Back,gb);
           jf.setVisible(true);
           jf.setSize(600,600);
    }  
     private void BackBtnActionPerformed(java.awt.event.ActionEvent evt,JFrame jf) { 
     
                jf.dispose();
               globalParent.globalHomePage.globalcourse_homepage.setVisible(true);
                
     
    }
    private void BackBtn_CourseHomePageActionPerformed(java.awt.event.ActionEvent evt,JFrame jf) { 
     
                jf.dispose();
               globalParent.globalHomePage.globalcourse_homepage.setVisible(true);
                
     
    }
        private void Clear_MessagesActionPerformed(java.awt.event.ActionEvent evt,JFrame jf, JLabel[] jb,int j) { 
     
            for(int i=0;i<j;i++)   
                jb[i].setVisible(false);
            
            
               //globalParent.globalHomePage.globalcourse_homepage.setVisible(true);
                
     
    }
    
     private void Open_HwPerformed(ActionEvent evt, JFrame jf_hw,int hwid,int maxattempt, int attemptmde) {
      //To change body of generated methods, choose Tools | Templates.
           int attempts_rem = 0;
        
           attempts_rem = maxattempt - attemptmde;
           
           if(attempts_rem <= 0){
              JOptionPane.showMessageDialog(this, "Maximum Attempts reached");
           }
           else
           {
           final JFrame jf_openhw = new JFrame();
           JPanel p=new JPanel(new GridBagLayout());
           GridBagConstraints gb = new GridBagConstraints();
          
          
           
           final JButton nextBtn = new JButton("Next");
           JLabel qText = new JLabel();
           
           JButton backBtn = new JButton("Go Back");
           }
                   
                    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    // End of variables declaration                   
}

class opencoursecontent extends AbstractAction{

    public String coursetokenid;
    public String sectionName;
    public String Login_id;
    public String coursetopicid;
    public int j;
    Gradiance globalparent;
    
    public opencoursecontent( String course_tokenid ,String section_Name )  
    {  
        this.coursetokenid = course_tokenid;
        this.sectionName = section_Name;
    }  
          
    @Override
    public void actionPerformed(ActionEvent e) {
           JFrame jf = new JFrame();
           JPanel p=new JPanel(new GridBagLayout());
           JScrollPane jScrollPane1 = new JScrollPane(p);
           GridBagConstraints gb = new GridBagConstraints();
           JLabel jbcontent = new JLabel("");
           JButton Back =new JButton("Back");
           int j=0;
           String result= "";
        try
           {
               
            String sql ="{call RetrieveContentVal(?,?,?)}";
            Connection conn = Gradiance.conn;
            CallableStatement callableStatement = conn.prepareCall(sql);
            callableStatement.setString(1,coursetokenid);
            callableStatement.setString(2,sectionName);
            callableStatement.registerOutParameter(3,java.sql.Types.VARCHAR);
            callableStatement.execute();
             result = ((OracleCallableStatement)callableStatement).getString(3);
             
          
            jbcontent.setText("<html><p style=\"width:500px;text-align: justify\">"+result+"</p></html>");
                       }
           catch(SQLException ex)
           {
               
           }
           p.add(jbcontent);
           jf.add(jScrollPane1);
           jf.pack();
           jf.setSize(5000, 5000);
           jf.setVisible(true);
           
    }
}


class SomeAction extends AbstractAction
{  
    public int hw_ID;
    public int maxattm;
    public int AtteMade;
    public String Login_id;
    public ResultSet resultsetQuestion;
    public ResultSet resultsetAnswers;
    public String Course_TokenID;
    Gradiance globalparent;
    public int j;
            JLabel jqv[] = new JLabel[1000];
            JLabel jqk[] = new JLabel[1000];
            JLabel jqs[] = new JLabel[1000];
            
            JRadioButton jav1[] = new JRadioButton[1000];
            JLabel jak1[] = new JLabel[1000];
            
            JRadioButton jav2[] = new JRadioButton[1000];
            JLabel jak2[] = new JLabel[1000];
            
            JRadioButton jav3[] = new JRadioButton[1000];
            JLabel jak3[] = new JLabel[1000];
            
            JRadioButton jav4[] = new JRadioButton[1000];
            JLabel jak4[] = new JLabel[1000];
            
            ButtonGroup bg[] = new ButtonGroup[1000];
    
    
    public SomeAction( int Hw_id, int Max_attempts, int Attemptsmade, String LoginId,String Course_TokenIDs )  
    {  
        this.hw_ID = Hw_id;
        this.maxattm = Max_attempts;
        this.AtteMade = Attemptsmade;
        this.Login_id = LoginId;
        this.Course_TokenID = Course_TokenIDs;
        
    }  
    
    public void SubmitBtnActionPerformed(ActionEvent e, JFrame jf1)
    {
       
       int i = 0;
       int questionId, optionId1, optionId2, optionId3, optionId4, selectedOption=0,correctAns=0,TotalQ = j,marksObtained=0,setId;
       int correctAnsPoints=0, wrongAnsPoints=0;
       for(i=0;i<j;i++)
       {
           
           questionId = Integer.parseInt(jqk[i].getText());
           setId = Integer.parseInt(jqs[i].getText());
           
           if(jav1[i].isSelected())
           {
              selectedOption = Integer.parseInt(jak1[i].getText());
           }
           else if (jav2[i].isSelected())
           {
               selectedOption = Integer.parseInt(jak2[i].getText());
           }
           else if (jav3[i].isSelected())
           {
               selectedOption = Integer.parseInt(jak3[i].getText());
           }
           else if (jav4[i].isSelected())
           {
               selectedOption = Integer.parseInt(jak4[i].getText());
           }
           
           try
           {
               
            String sql ="{call QuestiontoAnswer(?,?,?)}";
            Connection conn = Gradiance.conn;
            CallableStatement callableStatement = conn.prepareCall(sql);
            callableStatement.setInt(1,Integer.parseInt(jqk[i].getText()));
            callableStatement.setInt(2, Integer.parseInt(jqs[i].getText()));
            callableStatement.registerOutParameter(3,OracleTypes.CURSOR);
            callableStatement.execute();
            ResultSet result = ((OracleCallableStatement)callableStatement).getCursor(3);
            
            while(result.next())
            {
                if(selectedOption == Integer.parseInt(result.getString(1)))
                {
                    correctAns++;
                    break;
                }
            }
            
           }
           catch(SQLException ex)
           {
               
           }
           
       }
       
            try
            {
            String sql1 ="{call FETCHEXERCISEDETAILS(?,?)}";
            Connection conn = Gradiance.conn;
            CallableStatement callableStatement = conn.prepareCall(sql1);
            callableStatement.setInt(1,hw_ID);
            callableStatement.registerOutParameter(2,OracleTypes.CURSOR);
            callableStatement.execute();
            ResultSet result = ((OracleCallableStatement)callableStatement).getCursor(2);
            
            if(result.next())
            {
                correctAnsPoints =  result.getInt(2);
                wrongAnsPoints = result.getInt(3);
            }
            
            marksObtained = correctAnsPoints*correctAns + wrongAnsPoints*(TotalQ-correctAns);
            if(marksObtained < 0)
            {
                marksObtained =0;
            }
            
            String sql2 ="{call SUBMIT_CLCK(?,?,?,?)}";
            Connection conn2 = Gradiance.conn;
            CallableStatement callableStatement1 = conn.prepareCall(sql2);
            callableStatement1.setInt(1,hw_ID);
            callableStatement1.setString(2,Login_id);
            callableStatement1.setInt(3,marksObtained);
            callableStatement1.setString(4, Course_TokenID);
            callableStatement1.execute();
            
            }
            catch(SQLException ex)
            {
                
            }
            
            
            
            
        for(int k =0; k<j ; k++)
        {

           questionId = Integer.parseInt(jqk[k].getText());
           setId = Integer.parseInt(jqs[k].getText());
           if(jav1[k].isSelected())
           {
              selectedOption = Integer.parseInt(jak1[k].getText());
           }
           else if (jav2[k].isSelected())
           {
               selectedOption = Integer.parseInt(jak2[k].getText());
           }
           else if (jav3[k].isSelected())
           {
               selectedOption = Integer.parseInt(jak3[k].getText());
           }
           else if (jav4[k].isSelected())
           {
               selectedOption = Integer.parseInt(jak4[k].getText());
           }
           
           try
           {
               
            String sql ="{call SUBMIT_CLCK2(?,?,?,?,?,?,?,?,?)}";
            Connection conn = Gradiance.conn;
            CallableStatement callableStatement = conn.prepareCall(sql);
            callableStatement.setInt(1,hw_ID);
            callableStatement.setString(2,Login_id);
            callableStatement.setInt(3,Integer.parseInt(jqk[k].getText()));
            callableStatement.setInt(4,Integer.parseInt(jak1[k].getText()));
            callableStatement.setInt(5,Integer.parseInt(jak2[k].getText()));
            callableStatement.setInt(6,Integer.parseInt(jak3[k].getText()));
            callableStatement.setInt(7,Integer.parseInt(jak4[k].getText()));
            callableStatement.setInt(8,selectedOption);
            callableStatement.setInt(9,setId);
            callableStatement.execute();
            
           }
           catch(SQLException ex)
           {
               
           }
           
                
                
            }
        
        
           JOptionPane.showMessageDialog(null, "You Scored : "+marksObtained+"");
           
           
           int attemp_id_temp =0 ;
           String selectedOption1,correctAnswer1;
                      
         try {
            Connection conn = Gradiance.conn;
            String sql ="select max(SA.attemptid) from studentattempt SA , Users U where U.UserId = SA.Userid AND SA.exerciseid =? and U.LoginID = ?";
            PreparedStatement preStatement = conn.prepareStatement(sql);
            //preStatement.setString(1,globalparent.globalHomePage.globalyour_classes.course_tokenid);
            preStatement.setInt(1,hw_ID);
            preStatement.setString(2,Login_id);
    
            ResultSet result = preStatement.executeQuery();
            if(result.next()){
            attemp_id_temp = Integer.parseInt(result.getString(1));
        }    
         

         
                 
    }   
            catch (SQLException ex) {
            Logger.getLogger(Gradiance.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        
            JLabel jqv[] = new JLabel[1000];
            
            JRadioButton jav1[] = new JRadioButton[1000];
            
            JRadioButton jav2[] = new JRadioButton[1000];
            
            JRadioButton jav3[] = new JRadioButton[1000];
            
            JRadioButton jav4[] = new JRadioButton[1000];
            
            JLabel jCW[] = new JLabel[1000];
            JLabel jExp[] = new JLabel[1000];
                
           JFrame jf = new JFrame();
           JPanel p=new JPanel(new GridBagLayout());
           JScrollPane jScrollPane1 = new JScrollPane(p);
           GridBagConstraints gb = new GridBagConstraints();
           
           JButton Back =new JButton("Back");
           
          
                
            int j =0;
           

            try
            {

            String sql ="{CALL FetchPastQuestionsSubmissions(?,?,?,?)}";
            Connection conn = Gradiance.conn;
            CallableStatement callableStatement = conn.prepareCall(sql);
            callableStatement.setInt(2,hw_ID);
            callableStatement.setInt(3,attemp_id_temp);
            callableStatement.setString(1,Login_id);
            callableStatement.registerOutParameter(4,OracleTypes.CURSOR);
            callableStatement.execute();
            ResultSet result = ((OracleCallableStatement)callableStatement).getCursor(4);
            
            
            while(result.next()){
                
                
                selectedOption1 = result.getString(6);
                correctAnswer1 = result.getString(9);
                
                jqv[j] = new JLabel((j+1)+". " +result.getString(1));
                
                
                jav1[j]=new JRadioButton(result.getString(2));
                jav1[j].setEnabled(false);
                if(selectedOption1.equals(jav1[j].getText()))
                {
                    jav1[j].setSelected(true);
                }
                
                jav2[j]=new JRadioButton(result.getString(3));
                jav2[j].setEnabled(false);
                if(selectedOption1.equals(jav2[j].getText()))
                {
                    jav2[j].setSelected(true);
                }
                
                
                jav3[j]=new JRadioButton(result.getString(4));
                jav3[j].setEnabled(false);
                if(selectedOption1.equals(jav3[j].getText()))
                {
                    jav3[j].setSelected(true);
                }
                
                
                jav4[j] =new JRadioButton(result.getString(5));
                jav4[j].setEnabled(false);
                
                if(selectedOption1.equals(jav4[j].getText()))
                {
                    jav4[j].setSelected(true);
                }
                
                
                if(selectedOption1.equals(correctAnswer1))
                {
                    jCW[j] = new JLabel("You answered it Correct!");
                    jCW[j].setForeground(Color.green);
                    jExp[j] = new JLabel("");
                }
                else
                {
                    jCW[j] = new JLabel("Incorrect!");
                    jCW[j].setForeground(Color.red);
                    jExp[j] = new JLabel("Hint : \n" + result.getString(7));
                }
                
               
                
                j++;
                
            }
            
           
            }
           catch (SQLException ex) {
            Logger.getLogger(Gradiance.class.getName()).log(Level.SEVERE, null, ex);
        }
            
             jf.add(jScrollPane1);
           
           jf.pack();
         
           jf.setSize(5000, 5000);
           
           int k = 0;
           for( i=0;i<j;i++) {
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = k;
            p.add(jqv[i],gb);

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 2+k;
            p.add(jav1[i],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 4+k;
            p.add(jav2[i],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 6+k;
            p.add(jav3[i],gb);
           
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 8+k;
            p.add(jav4[i],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 10+k;
            p.add(jCW[i],gb);
            
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 12+k;
            p.add(jExp[i],gb);
            
           
            
            k = 8+k+6;
           }

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 2;
            gb.gridy = k+3;
            p.add(Back,gb);
            
            
            
           jf.pack();
           jf.setVisible(true);
           jf1.dispose();
           
    }
    public void actionPerformed( ActionEvent e )  
    {  
        if(maxattm-AtteMade<=0)
        {
        JOptionPane.showMessageDialog( null, "Reached Max attempts!");
        }
        else
        {
           final JFrame jf = new JFrame();
           JPanel p=new JPanel(new GridBagLayout());
           JScrollPane jScrollPane1 = new JScrollPane(p);
           GridBagConstraints gb = new GridBagConstraints();
           
           JButton Back =new JButton("Back");
           
           JButton Submit =new JButton("Submit");
           Back.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_Attempt_HWBtnActionPerformed(evt,jf);
            }

               

               
            });
           Submit.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitBtnActionPerformed(evt,jf);
            }
            });
           
          
            int[] QuestionIds;
            ARRAY arrayQuestionIds;
            ARRAY arraySetIds;
            int[] SetIds;
            String[] QuestionTexts;

            try
            {

            String sql ="{CALL RETRIEVEEXERCISEQUESTIONS(?,?,?)}";
            Connection conn = Gradiance.conn;
            CallableStatement callableStatement = conn.prepareCall(sql);
            callableStatement.setInt(1,hw_ID);
            callableStatement.registerOutParameter(2,OracleTypes.CURSOR);
            callableStatement.registerOutParameter(3, java.sql.Types.INTEGER);
            callableStatement.execute();
            ResultSet result = ((OracleCallableStatement)callableStatement).getCursor(2);
            int rowCount = callableStatement.getInt(3);
            ResultSet temp = result;
            
            
            ArrayDescriptor arrayDescQuestions = ArrayDescriptor.createDescriptor("QUESTION_LIST", Gradiance.conn);
            ArrayDescriptor arrayDescSets = ArrayDescriptor.createDescriptor("SETS_LIST", Gradiance.conn);
            
            QuestionIds = new int[rowCount];
            SetIds = new int[rowCount];
            QuestionTexts = new String[rowCount];
           
            int i = 0;
            while(temp.next())
            {
                
                QuestionIds[i] = temp.getInt(1);
                QuestionTexts[i] = temp.getString(2);
                SetIds[i] = temp.getInt(5);
                i++;
            }
            arrayQuestionIds = new ARRAY(arrayDescQuestions,Gradiance.conn,QuestionIds);
            arraySetIds = new ARRAY(arrayDescSets,Gradiance.conn,SetIds);
            resultsetQuestion = result;
            
            String sql1 ="{CALL RETRIEVEANSWERS(?,?,?,?)}";
            CallableStatement callableStatement1 = conn.prepareCall(sql1);
            callableStatement1.setInt(1,hw_ID);
            callableStatement1.setArray(2, arrayQuestionIds);
            callableStatement1.setArray(3, arraySetIds);
            callableStatement1.registerOutParameter(4,OracleTypes.CURSOR);
            callableStatement1.execute();
            ResultSet result1 =((OracleCallableStatement)callableStatement1).getCursor(4);
            resultsetAnswers = result1;
                j=0;
            while(j<i)
            {
                jqv[j] = new JLabel((j+1)+". " +QuestionTexts[j]);
                jqk[j] = new JLabel(""+QuestionIds[j]+"");
                jqs[j] = new JLabel(""+SetIds[j]+"");
                j++;
            }
            
            int l =0;
            while(result1.next()){
                
                jav1[l]=new JRadioButton(result1.getString(2)+"    ");
                jak1[l]=new JLabel(result1.getString(1));
                
                if(result1.next())
                {
                jav2[l]=new JRadioButton(result1.getString(2)+"    ");
                jak2[l]=new JLabel(result1.getString(1));
                }
                
                if(result1.next())
                {
                jav3[l]=new JRadioButton(result1.getString(2)+"    ");
                jak3[l]=new JLabel(result1.getString(1));
                }
                
                if(result1.next())
                {
                jav4[l] =new JRadioButton(result1.getString(2)+"    ");
                jak4[l]=new JLabel(result1.getString(1));
                }
                
                bg[l] = new ButtonGroup();
                bg[l].add(jav1[l]);
                bg[l].add(jav2[l]);
                bg[l].add(jav3[l]);
                bg[l].add(jav4[l]);
               l++;
                
            }
            }
           catch (SQLException ex) {
            Logger.getLogger(Gradiance.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
           

           jf.add(jScrollPane1);
           
           jf.pack();
           
           int k = 0;
           for(int i=0;i<j;i++) {
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = k;
            p.add(jqv[i],gb);

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 2+k;
            p.add(jav1[i],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 4+k;
            p.add(jav2[i],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 6+k;
            p.add(jav3[i],gb);
           
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 8+k;
            
            k = 8+k+3;
            p.add(jav4[i],gb);
           }

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 2;
            gb.gridy = k+3;
            p.add(Back,gb);
            
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 1;
            gb.gridy = k+3;
            p.add(Submit,gb);
            
           jf.pack();
           jf.setVisible(true);
           
        }
    
    }
    private void Back_Attempt_HWBtnActionPerformed(ActionEvent evt, JFrame jf) {
                        jf.dispose();
               }
} 

class SomeAction1 extends AbstractAction
{
    int exercise_Id;
    String Login_Id;
    int attemptId;
    
    public SomeAction1(int exercise_Id,int attemptId, String Login_Id)
    {
        this.exercise_Id = exercise_Id;
        this.attemptId = attemptId;
        this.Login_Id = Login_Id;
    
    }
    
    public void actionPerformed(ActionEvent e)
    {
         String selectedOption,correctAnswer;
        
            JLabel jqv[] = new JLabel[1000];
            
            JRadioButton jav1[] = new JRadioButton[1000];
            
            JRadioButton jav2[] = new JRadioButton[1000];
            
            JRadioButton jav3[] = new JRadioButton[1000];
            
            JRadioButton jav4[] = new JRadioButton[1000];
            
            JLabel jCW[] = new JLabel[1000];
            JLabel jExp[] = new JLabel[1000];
                
            JFrame jf = new JFrame();
           JPanel p=new JPanel(new GridBagLayout());
           JScrollPane jScrollPane1 = new JScrollPane(p);
           GridBagConstraints gb = new GridBagConstraints();
           
           JButton Back =new JButton("Back");
           
          
                
            int j =0;
           

            try
            {

            String sql ="{CALL FetchPastQuestionsSubmissions(?,?,?,?)}";
            Connection conn = Gradiance.conn;
            CallableStatement callableStatement = conn.prepareCall(sql);
            callableStatement.setInt(2,exercise_Id);
            callableStatement.setInt(3,attemptId);
            callableStatement.setString(1,Login_Id);
            callableStatement.registerOutParameter(4,OracleTypes.CURSOR);
            callableStatement.execute();
            ResultSet result = ((OracleCallableStatement)callableStatement).getCursor(4);
            
            
            while(result.next()){
                
                
                selectedOption = result.getString(6);
                correctAnswer = result.getString(9);
                
                jqv[j] = new JLabel((j+1)+". " +result.getString(1));
                
                
                jav1[j]=new JRadioButton(result.getString(2));
                jav1[j].setEnabled(false);
                if(selectedOption.equals(jav1[j].getText()))
                {
                    jav1[j].setSelected(true);
                }
                
                jav2[j]=new JRadioButton(result.getString(3));
                jav2[j].setEnabled(false);
                if(selectedOption.equals(jav2[j].getText()))
                {
                    jav2[j].setSelected(true);
                }
                
                
                jav3[j]=new JRadioButton(result.getString(4));
                jav3[j].setEnabled(false);
                if(selectedOption.equals(jav3[j].getText()))
                {
                    jav3[j].setSelected(true);
                }
                
                
                jav4[j] =new JRadioButton(result.getString(5));
                jav4[j].setEnabled(false);
                
                if(selectedOption.equals(jav4[j].getText()))
                {
                    jav4[j].setSelected(true);
                }
                
                
                if(selectedOption.equals(correctAnswer))
                {
                    jCW[j] = new JLabel("You answered it Correct!");
                    jCW[j].setForeground(Color.green);
                }
                else
                {
                    jCW[j] = new JLabel("Incorrect!");
                    jCW[j].setForeground(Color.red);
                }
                
                jExp[j] = new JLabel("Explanation : \n" + result.getString(8));
                j++;
                
            }
            }
           catch (SQLException ex) {
            Logger.getLogger(Gradiance.class.getName()).log(Level.SEVERE, null, ex);
        }
           

           jf.add(jScrollPane1);
           
           jf.pack();
         
           jf.setSize(5000, 5000);
           
           int k = 0;
           for(int i=0;i<j;i++) {
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = k;
            p.add(jqv[i],gb);

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 2+k;
            p.add(jav1[i],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 4+k;
            p.add(jav2[i],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 6+k;
            p.add(jav3[i],gb);
           
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 8+k;
            p.add(jav4[i],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 10+k;
            p.add(jCW[i],gb);
            
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 12+k;
            p.add(jExp[i],gb);
            
           
            
            k = 8+k+3;
           }

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 2;
            gb.gridy = k+3;
            p.add(Back,gb);
            
            
            
           jf.pack();
           jf.setVisible(true);
           
        
    }
    
    public void submit_past_submission(ActionEvent e)
    {
         String selectedOption,correctAnswer;
        
            JLabel jqv[] = new JLabel[1000];
            
            JRadioButton jav1[] = new JRadioButton[1000];
            
            JRadioButton jav2[] = new JRadioButton[1000];
            
            JRadioButton jav3[] = new JRadioButton[1000];
            
            JRadioButton jav4[] = new JRadioButton[1000];
            
            JLabel jCW[] = new JLabel[1000];
            JLabel jExp[] = new JLabel[1000];
                
            JFrame jf = new JFrame();
           JPanel p=new JPanel(new GridBagLayout());
           JScrollPane jScrollPane1 = new JScrollPane(p);
           GridBagConstraints gb = new GridBagConstraints();
           
           JButton Back =new JButton("Back");
           
          
                
            int j =0;
           

            try
            {

            String sql ="{CALL FetchPastQuestionsSubmissions(?,?,?,?)}";
            Connection conn = Gradiance.conn;
            CallableStatement callableStatement = conn.prepareCall(sql);
            callableStatement.setInt(2,exercise_Id);
            callableStatement.setInt(3,attemptId);
            callableStatement.setString(1,Login_Id);
            callableStatement.registerOutParameter(4,OracleTypes.CURSOR);
            callableStatement.execute();
            ResultSet result = ((OracleCallableStatement)callableStatement).getCursor(4);
            
            
            while(result.next()){
                
                
                selectedOption = result.getString(6);
                correctAnswer = result.getString(9);
                
                jqv[j] = new JLabel((j+1)+". " +result.getString(1));
                
                
                jav1[j]=new JRadioButton(result.getString(2));
                jav1[j].setEnabled(false);
                if(selectedOption.equals(jav1[j].getText()))
                {
                    jav1[j].setSelected(true);
                }
                
                jav2[j]=new JRadioButton(result.getString(3));
                jav2[j].setEnabled(false);
                if(selectedOption.equals(jav2[j].getText()))
                {
                    jav2[j].setSelected(true);
                }
                
                
                jav3[j]=new JRadioButton(result.getString(4));
                jav3[j].setEnabled(false);
                if(selectedOption.equals(jav3[j].getText()))
                {
                    jav3[j].setSelected(true);
                }
                
                
                jav4[j] =new JRadioButton(result.getString(5));
                jav4[j].setEnabled(false);
                
                if(selectedOption.equals(jav4[j].getText()))
                {
                    jav4[j].setSelected(true);
                }
                
                
                if(selectedOption.equals(correctAnswer))
                {
                    jCW[j] = new JLabel("You answered it Correct!");
                    jCW[j].setForeground(Color.green);
                }
                else
                {
                    jCW[j] = new JLabel("Incorrect!");
                    jCW[j].setForeground(Color.red);
                }
                
                jExp[j] = new JLabel("Explanation : \n" + result.getString(8));
                j++;
                
            }
            }
           catch (SQLException ex) {
            Logger.getLogger(Gradiance.class.getName()).log(Level.SEVERE, null, ex);
        }
           

           jf.add(jScrollPane1);
           
           jf.pack();
         
           jf.setSize(5000, 5000);
           
           int k = 0;
           for(int i=0;i<j;i++) {
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = k;
            p.add(jqv[i],gb);

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 2+k;
            p.add(jav1[i],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 4+k;
            p.add(jav2[i],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 6+k;
            p.add(jav3[i],gb);
           
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 8+k;
            p.add(jav4[i],gb);
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 10+k;
            p.add(jCW[i],gb);
            
            
            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 0;
            gb.gridy = 12+k;
            p.add(jExp[i],gb);
            
           
            
            k = 8+k+3;
           }

            gb.fill = GridBagConstraints.HORIZONTAL;
            gb.gridx = 2;
            gb.gridy = k+3;
            p.add(Back,gb);
            
            
            
           jf.pack();
           jf.setVisible(true);
           
        
    }
    
    
}

